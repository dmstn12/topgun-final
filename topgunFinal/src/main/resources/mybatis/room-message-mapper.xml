<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="roomMessage">
	
	<!-- 시퀀스 생성 -->
	<select id="sequence" resultType="int">
		select room_message_seq.nextval from dual
	</select>
	
	<!-- 메세지 등록 -->
	<insert id="add">
		insert into room_message
		(
			room_message_no, room_message_type, room_message_sender, room_message_receiver, 
			room_message_content, room_message_time, room_no
		)
		values(
			#{roomMessageNo}, #{roomMessageType}, #{roomMessageSender},
			<!-- null이 들어갈 수 있도록 형태를 명시 -->
			#{roomMessageReceiver, jdbcType=VARCHAR}, 
			#{roomMessageContent} , #{roomMessageTime} , #{roomNo}
		)
	</insert>
	
	<select id="listMemberComplete" resultType="WebsocketMessageVO">
		<include refid="top-n-header"></include>
		select 
			RM.room_message_no "no",
			RM.room_message_type "type",
			RM.room_message_sender "sender_users_id",
			U.users_type "sender_users_type",
			RM.room_message_receiver "receiver_users_id",
			RM.room_message_content "content",
			RM.room_message_time "time"
		from 
			room_message RM 
				left outer join users U 
					on RM.room_message_sender = U.users_id
		<!-- 일반채팅(chat) + 나의DM만 조회 --> 
		where 
			<!-- 방 번호에 대한 조건 -->
			room_no = #{roomNo}
			and
		<!-- 조회할 채팅에 대한 조건 -->
		(
			RM.room_message_type = 'chat'
			<!-- DM은 회원만(usersId != null) 조회 -->
			<if test="usersId != null">
			or
			(
				RM.room_message_type = 'dm' 
				and
				(
					RM.room_message_sender = #{usersId}
					or
					RM.room_message_receiver = #{usersId}
				) 
			)			
			</if>
		)
			<!-- 더보기를 위한 조건 추가 : firstMessageNo가 있으면 -->
			<if test="firstMessageNo != null">
			<![CDATA[
			and room_message_no < #{firstMessageNo}
			]]>
			</if>
		order by RM.room_message_no desc
		<include refid="top-n-footer"></include>
		<!-- top n query로 만들어진 최종 결과를 다시 정렬(별칭 사용 불가) -->
		order by "no" asc		
	</select>
	
	<sql id="top-n-header">
		<if test="beginRow != null and endRow != null">
		select * from (
  			select rownum rn, TMP.* from(
  		</if>
	</sql>
	<sql id="top-n-footer">
		<if test="beginRow != null and endRow != null">
		 	)TMP
		)
		where rn between #{beginRow} and #{endRow}
		</if>
	</sql>
	
</mapper>