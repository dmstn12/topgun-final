<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="room">

	<!-- 시퀀스 생성 -->
	<select id="sequence" resultType="int">
		select room_seq.nextval from dual
	</select>
	
	<!-- 채팅방 생성 -->
	<insert id="insert">
		insert into room(room_no, room_name, room_created, room_created_by)
		values(#{roomNo}, #{roomName}, systimestamp, #{roomCreatedBy})
	</insert>
	
	<!-- 채팅방 목록 -->
	<select id="list" resultType="RoomDto">
		select * from room order by room_no asc
	</select>
	
	<select id="listByUser" resultType="RoomVO">
		select 
			R.*, nvl2(RM.users_id, 'Y', 'N') "join"
		from 
			room R left outer join (
				select * from room_member where users_id = #{usersId}
			) RM
				on R.room_no = RM.room_no
		order by R.room_no asc
	</select>
	
	<select id="listByUserLastMessage" resultType="RoomVO">
		SELECT 
		    R.*, 
		    NVL(M.room_message_content, '') AS lastMessage,  
		    NVL(M.room_message_time, null) AS lastMessageTime,  
		    NVL(RM.users_id,'N') AS join  
		FROM 
		    room R
		LEFT JOIN (
		    SELECT 
		        room_no, 
		        room_message_content, 
		        room_message_time  
		    FROM 
		        room_message 
		    WHERE 
		        (room_no, room_message_time) IN (
		            SELECT 
		                room_no, 
		                MAX(room_message_time)  
		            FROM 
		                room_message 
		            GROUP BY 
		                room_no
		        )
		) M ON R.room_no = M.room_no
		LEFT JOIN room_member RM ON R.room_no = RM.room_no AND RM.users_id = #{usersId} 
		ORDER BY R.room_no ASC
	</select>
	
	<!-- 상세 -->
	<select id="detail" resultType="RoomDto">
		select * from room where room_no = #{roomNo}
	</select>
	
	<!-- 채팅방 삭제 -->
	<delete id="delete">
		delete room where room_no = #{roomNo}
	</delete>
	
</mapper>